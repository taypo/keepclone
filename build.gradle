buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.bmuschko:gradle-docker-plugin:3.0.4'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.docker-remote-api'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

jar {
	archiveName = 'keepclone.jar'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

docker {
	url = "unix:///var/run/docker.sock"
	registryCredentials {
		username = 'taypo'
		password = project.hasProperty("dockerPassword ") ? dockerPassword : System.getenv("DOCKER_PASSWORD")
		email = 'bahadir.yagan@gmail.com'
	}
}

task buildImage(type: DockerBuildImage) {
	inputDir = file("build")
	dockerFile = file("build/resources/main/docker/Dockerfile")
	tag = "taypo/keepclone"
}


task pushImage(type: DockerPushImage) {
	imageName = "taypo/keepclone"
}


task docker {
	dependsOn buildImage, pushImage
}

dependencies {
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')
	//webjars
	compile('org.webjars:vue:2.1.3')
	compile('org.webjars:bootstrap:4.0.0-alpha.6-1')
	compile('org.webjars:masonry:3.3.2')
	compile('org.webjars:webjars-locator')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
